Terminals unused in grammar

    VAR
    NEWLINE
    PRINTLN
    TRUE
    FALSE


State 35 conflicts: 5 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | Statement

    4 Statement: DeclarationStmt
    5          | AssignmentStmt
    6          | IncDecStmt
    7          | Block
    8          | IfStmt
    9          | WhileStmt
   10          | ForStmt
   11          | PrintStmt
   12          | Expression

   13 Type: TypeName

   14 TypeName: INT
   15         | FLOAT
   16         | STRING
   17         | BOOL

   18 Expression: UnaryExpr
   19           | Expression ADD Expression SEMICOLON
   20           | Expression SUB Expression SEMICOLON
   21           | Expression MUL Expression SEMICOLON
   22           | Expression QUO Expression SEMICOLON
   23           | Expression REM Expression SEMICOLON

   24 UnaryExpr: PrimaryExpr
   25          | unary_op UnaryExpr
   26          | binary_op

   27 unary_op: NOT

   28 binary_op: LOR
   29          | LAND
   30          | cmp_op
   31          | add_op
   32          | mul_op

   33 cmp_op: EQL
   34       | NEQ
   35       | LST
   36       | LEQ
   37       | GTR
   38       | GEQ

   39 add_op: ADD
   40       | SUB

   41 mul_op: MUL
   42       | QUO
   43       | REM

   44 PrimaryExpr: Operand
   45            | IndexExpr
   46            | ConversionExpr

   47 Operand: Literal
   48        | IDENT
   49        | '(' Expression ')'

   50 Literal: INT_LIT
   51        | FLOAT_LIT
   52        | STRING_LIT

   53 IndexExpr: PrimaryExpr '[' Expression ']'

   54 ConversionExpr: Type '(' Expression ')'

   55 DeclarationStmt: Type IDENT '[' ASSIGN Expression ']' SEMICOLON
   56                | Type IDENT '[' Expression ']' SEMICOLON
   57                | Type IDENT SEMICOLON

   58 AssignmentExpr: Expression assign_op Expression

   59 AssignmentStmt: AssignmentExpr SEMICOLON

   60 assign_op: ASSIGN
   61          | ADD_ASSIGN
   62          | SUB_ASSIGN
   63          | MUL_ASSIGN
   64          | QUO_ASSIGN
   65          | REM_ASSIGN

   66 IncDecExpr: INC
   67           | DEC

   68 IncDecStmt: Expression IncDecExpr SEMICOLON

   69 Block: '{' StatementList '}'

   70 IfStmt: IF Condition Block
   71       | ELSE

   72 Condition: Expression

   73 WhileStmt: WHILE '(' Condition ')' Block

   74 ForStmt: FOR '(' ForClause ')' Block

   75 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   76 InitStmt: SimpleExpr

   77 PostStmt: SimpleExpr

   78 SimpleExpr: AssignmentExpr
   79           | Expression
   80           | IncDecExpr

   81 PrintStmt: PRINT '(' Expression ')' SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 49 54 73 74 81
    ')' (41) 49 54 73 74 81
    '[' (91) 53 55 56
    ']' (93) 53 55 56
    '{' (123) 69
    '}' (125) 69
    error (256)
    VAR (258)
    ADD (259) 19 39
    SUB (260) 20 40
    MUL (261) 21 41
    QUO (262) 22 42
    REM (263) 23 43
    INT (264) 14
    FLOAT (265) 15
    BOOL (266) 17
    STRING (267) 16
    INC (268) 66
    DEC (269) 67
    GEQ (270) 38
    LEQ (271) 36
    EQL (272) 33
    NEQ (273) 34
    LST (274) 35
    GTR (275) 37
    ASSIGN (276) 55 60
    ADD_ASSIGN (277) 61
    SUB_ASSIGN (278) 62
    MUL_ASSIGN (279) 63
    QUO_ASSIGN (280) 64
    REM_ASSIGN (281) 65
    LAND (282) 29
    LOR (283) 28
    NOT (284) 27
    NEWLINE (285)
    SEMICOLON (286) 19 20 21 22 23 55 56 57 59 68 75 81
    IF (287) 70
    ELSE (288) 71
    WHILE (289) 73
    FOR (290) 74
    PRINT (291) 81
    PRINTLN (292)
    TRUE (293)
    FALSE (294)
    INT_LIT <i_val> (295) 50
    FLOAT_LIT <f_val> (296) 51
    STRING_LIT <s_val> (297) 52
    IDENT <s_val> (298) 48 55 56 57


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    Program (51)
        on left: 1
        on right: 0
    StatementList (52)
        on left: 2 3
        on right: 1 2 69
    Statement (53)
        on left: 4 5 6 7 8 9 10 11 12
        on right: 2 3
    Type (54)
        on left: 13
        on right: 54 55 56 57
    TypeName (55)
        on left: 14 15 16 17
        on right: 13
    Expression (56)
        on left: 18 19 20 21 22 23
        on right: 12 19 20 21 22 23 49 53 54 55 56 58 68 72 79 81
    UnaryExpr (57)
        on left: 24 25 26
        on right: 18 25
    unary_op (58)
        on left: 27
        on right: 25
    binary_op (59)
        on left: 28 29 30 31 32
        on right: 26
    cmp_op (60)
        on left: 33 34 35 36 37 38
        on right: 30
    add_op (61)
        on left: 39 40
        on right: 31
    mul_op (62)
        on left: 41 42 43
        on right: 32
    PrimaryExpr (63)
        on left: 44 45 46
        on right: 24 53
    Operand (64)
        on left: 47 48 49
        on right: 44
    Literal (65)
        on left: 50 51 52
        on right: 47
    IndexExpr (66)
        on left: 53
        on right: 45
    ConversionExpr (67)
        on left: 54
        on right: 46
    DeclarationStmt (68)
        on left: 55 56 57
        on right: 4
    AssignmentExpr (69)
        on left: 58
        on right: 59 78
    AssignmentStmt (70)
        on left: 59
        on right: 5
    assign_op (71)
        on left: 60 61 62 63 64 65
        on right: 58
    IncDecExpr (72)
        on left: 66 67
        on right: 68 80
    IncDecStmt (73)
        on left: 68
        on right: 6
    Block (74)
        on left: 69
        on right: 7 70 73 74
    IfStmt (75)
        on left: 70 71
        on right: 8
    Condition (76)
        on left: 72
        on right: 70 73 75
    WhileStmt (77)
        on left: 73
        on right: 9
    ForStmt (78)
        on left: 74
        on right: 10
    ForClause (79)
        on left: 75
        on right: 74
    InitStmt (80)
        on left: 76
        on right: 75
    PostStmt (81)
        on left: 77
        on right: 75
    SimpleExpr (82)
        on left: 78 79 80
        on right: 76 77
    PrintStmt (83)
        on left: 81
        on right: 11


State 0

    0 $accept: . Program $end

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    IF          shift, and go to state 19
    ELSE        shift, and go to state 20
    WHILE       shift, and go to state 21
    FOR         shift, and go to state 22
    PRINT       shift, and go to state 23
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28
    '{'         shift, and go to state 29

    Program          go to state 30
    StatementList    go to state 31
    Statement        go to state 32
    Type             go to state 33
    TypeName         go to state 34
    Expression       go to state 35
    UnaryExpr        go to state 36
    unary_op         go to state 37
    binary_op        go to state 38
    cmp_op           go to state 39
    add_op           go to state 40
    mul_op           go to state 41
    PrimaryExpr      go to state 42
    Operand          go to state 43
    Literal          go to state 44
    IndexExpr        go to state 45
    ConversionExpr   go to state 46
    DeclarationStmt  go to state 47
    AssignmentExpr   go to state 48
    AssignmentStmt   go to state 49
    IncDecStmt       go to state 50
    Block            go to state 51
    IfStmt           go to state 52
    WhileStmt        go to state 53
    ForStmt          go to state 54
    PrintStmt        go to state 55


State 1

   39 add_op: ADD .

    $default  reduce using rule 39 (add_op)


State 2

   40 add_op: SUB .

    $default  reduce using rule 40 (add_op)


State 3

   41 mul_op: MUL .

    $default  reduce using rule 41 (mul_op)


State 4

   42 mul_op: QUO .

    $default  reduce using rule 42 (mul_op)


State 5

   43 mul_op: REM .

    $default  reduce using rule 43 (mul_op)


State 6

   14 TypeName: INT .

    $default  reduce using rule 14 (TypeName)


State 7

   15 TypeName: FLOAT .

    $default  reduce using rule 15 (TypeName)


State 8

   17 TypeName: BOOL .

    $default  reduce using rule 17 (TypeName)


State 9

   16 TypeName: STRING .

    $default  reduce using rule 16 (TypeName)


State 10

   38 cmp_op: GEQ .

    $default  reduce using rule 38 (cmp_op)


State 11

   36 cmp_op: LEQ .

    $default  reduce using rule 36 (cmp_op)


State 12

   33 cmp_op: EQL .

    $default  reduce using rule 33 (cmp_op)


State 13

   34 cmp_op: NEQ .

    $default  reduce using rule 34 (cmp_op)


State 14

   35 cmp_op: LST .

    $default  reduce using rule 35 (cmp_op)


State 15

   37 cmp_op: GTR .

    $default  reduce using rule 37 (cmp_op)


State 16

   29 binary_op: LAND .

    $default  reduce using rule 29 (binary_op)


State 17

   28 binary_op: LOR .

    $default  reduce using rule 28 (binary_op)


State 18

   27 unary_op: NOT .

    $default  reduce using rule 27 (unary_op)


State 19

   70 IfStmt: IF . Condition Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 57
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46
    Condition       go to state 58


State 20

   71 IfStmt: ELSE .

    $default  reduce using rule 71 (IfStmt)


State 21

   73 WhileStmt: WHILE . '(' Condition ')' Block

    '('  shift, and go to state 59


State 22

   74 ForStmt: FOR . '(' ForClause ')' Block

    '('  shift, and go to state 60


State 23

   81 PrintStmt: PRINT . '(' Expression ')' SEMICOLON

    '('  shift, and go to state 61


State 24

   50 Literal: INT_LIT .

    $default  reduce using rule 50 (Literal)


State 25

   51 Literal: FLOAT_LIT .

    $default  reduce using rule 51 (Literal)


State 26

   52 Literal: STRING_LIT .

    $default  reduce using rule 52 (Literal)


State 27

   48 Operand: IDENT .

    $default  reduce using rule 48 (Operand)


State 28

   49 Operand: '(' . Expression ')'

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 62
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 29

   69 Block: '{' . StatementList '}'

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    IF          shift, and go to state 19
    ELSE        shift, and go to state 20
    WHILE       shift, and go to state 21
    FOR         shift, and go to state 22
    PRINT       shift, and go to state 23
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28
    '{'         shift, and go to state 29

    StatementList    go to state 63
    Statement        go to state 32
    Type             go to state 33
    TypeName         go to state 34
    Expression       go to state 35
    UnaryExpr        go to state 36
    unary_op         go to state 37
    binary_op        go to state 38
    cmp_op           go to state 39
    add_op           go to state 40
    mul_op           go to state 41
    PrimaryExpr      go to state 42
    Operand          go to state 43
    Literal          go to state 44
    IndexExpr        go to state 45
    ConversionExpr   go to state 46
    DeclarationStmt  go to state 47
    AssignmentExpr   go to state 48
    AssignmentStmt   go to state 49
    IncDecStmt       go to state 50
    Block            go to state 51
    IfStmt           go to state 52
    WhileStmt        go to state 53
    ForStmt          go to state 54
    PrintStmt        go to state 55


State 30

    0 $accept: Program . $end

    $end  shift, and go to state 64


State 31

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    IF          shift, and go to state 19
    ELSE        shift, and go to state 20
    WHILE       shift, and go to state 21
    FOR         shift, and go to state 22
    PRINT       shift, and go to state 23
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28
    '{'         shift, and go to state 29

    $default  reduce using rule 1 (Program)

    Statement        go to state 65
    Type             go to state 33
    TypeName         go to state 34
    Expression       go to state 35
    UnaryExpr        go to state 36
    unary_op         go to state 37
    binary_op        go to state 38
    cmp_op           go to state 39
    add_op           go to state 40
    mul_op           go to state 41
    PrimaryExpr      go to state 42
    Operand          go to state 43
    Literal          go to state 44
    IndexExpr        go to state 45
    ConversionExpr   go to state 46
    DeclarationStmt  go to state 47
    AssignmentExpr   go to state 48
    AssignmentStmt   go to state 49
    IncDecStmt       go to state 50
    Block            go to state 51
    IfStmt           go to state 52
    WhileStmt        go to state 53
    ForStmt          go to state 54
    PrintStmt        go to state 55


State 32

    3 StatementList: Statement .

    $default  reduce using rule 3 (StatementList)


State 33

   54 ConversionExpr: Type . '(' Expression ')'
   55 DeclarationStmt: Type . IDENT '[' ASSIGN Expression ']' SEMICOLON
   56                | Type . IDENT '[' Expression ']' SEMICOLON
   57                | Type . IDENT SEMICOLON

    IDENT  shift, and go to state 66
    '('    shift, and go to state 67


State 34

   13 Type: TypeName .

    $default  reduce using rule 13 (Type)


State 35

   12 Statement: Expression .
   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   58 AssignmentExpr: Expression . assign_op Expression
   68 IncDecStmt: Expression . IncDecExpr SEMICOLON

    ADD         shift, and go to state 68
    SUB         shift, and go to state 69
    MUL         shift, and go to state 70
    QUO         shift, and go to state 71
    REM         shift, and go to state 72
    INC         shift, and go to state 73
    DEC         shift, and go to state 74
    ASSIGN      shift, and go to state 75
    ADD_ASSIGN  shift, and go to state 76
    SUB_ASSIGN  shift, and go to state 77
    MUL_ASSIGN  shift, and go to state 78
    QUO_ASSIGN  shift, and go to state 79
    REM_ASSIGN  shift, and go to state 80

    ADD       [reduce using rule 12 (Statement)]
    SUB       [reduce using rule 12 (Statement)]
    MUL       [reduce using rule 12 (Statement)]
    QUO       [reduce using rule 12 (Statement)]
    REM       [reduce using rule 12 (Statement)]
    $default  reduce using rule 12 (Statement)

    assign_op   go to state 81
    IncDecExpr  go to state 82


State 36

   18 Expression: UnaryExpr .

    $default  reduce using rule 18 (Expression)


State 37

   25 UnaryExpr: unary_op . UnaryExpr

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    UnaryExpr       go to state 83
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 38

   26 UnaryExpr: binary_op .

    $default  reduce using rule 26 (UnaryExpr)


State 39

   30 binary_op: cmp_op .

    $default  reduce using rule 30 (binary_op)


State 40

   31 binary_op: add_op .

    $default  reduce using rule 31 (binary_op)


State 41

   32 binary_op: mul_op .

    $default  reduce using rule 32 (binary_op)


State 42

   24 UnaryExpr: PrimaryExpr .
   53 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 84

    $default  reduce using rule 24 (UnaryExpr)


State 43

   44 PrimaryExpr: Operand .

    $default  reduce using rule 44 (PrimaryExpr)


State 44

   47 Operand: Literal .

    $default  reduce using rule 47 (Operand)


State 45

   45 PrimaryExpr: IndexExpr .

    $default  reduce using rule 45 (PrimaryExpr)


State 46

   46 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 46 (PrimaryExpr)


State 47

    4 Statement: DeclarationStmt .

    $default  reduce using rule 4 (Statement)


State 48

   59 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 85


State 49

    5 Statement: AssignmentStmt .

    $default  reduce using rule 5 (Statement)


State 50

    6 Statement: IncDecStmt .

    $default  reduce using rule 6 (Statement)


State 51

    7 Statement: Block .

    $default  reduce using rule 7 (Statement)


State 52

    8 Statement: IfStmt .

    $default  reduce using rule 8 (Statement)


State 53

    9 Statement: WhileStmt .

    $default  reduce using rule 9 (Statement)


State 54

   10 Statement: ForStmt .

    $default  reduce using rule 10 (Statement)


State 55

   11 Statement: PrintStmt .

    $default  reduce using rule 11 (Statement)


State 56

   54 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 67


State 57

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   72 Condition: Expression .

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72

    $default  reduce using rule 72 (Condition)


State 58

   70 IfStmt: IF Condition . Block

    '{'  shift, and go to state 29

    Block  go to state 86


State 59

   73 WhileStmt: WHILE '(' . Condition ')' Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 57
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46
    Condition       go to state 87


State 60

   74 ForStmt: FOR '(' . ForClause ')' Block

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    INC         shift, and go to state 73
    DEC         shift, and go to state 74
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 88
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46
    AssignmentExpr  go to state 89
    IncDecExpr      go to state 90
    ForClause       go to state 91
    InitStmt        go to state 92
    SimpleExpr      go to state 93


State 61

   81 PrintStmt: PRINT '(' . Expression ')' SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 94
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 62

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   49 Operand: '(' Expression . ')'

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72
    ')'  shift, and go to state 95


State 63

    2 StatementList: StatementList . Statement
   69 Block: '{' StatementList . '}'

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    IF          shift, and go to state 19
    ELSE        shift, and go to state 20
    WHILE       shift, and go to state 21
    FOR         shift, and go to state 22
    PRINT       shift, and go to state 23
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28
    '{'         shift, and go to state 29
    '}'         shift, and go to state 96

    Statement        go to state 65
    Type             go to state 33
    TypeName         go to state 34
    Expression       go to state 35
    UnaryExpr        go to state 36
    unary_op         go to state 37
    binary_op        go to state 38
    cmp_op           go to state 39
    add_op           go to state 40
    mul_op           go to state 41
    PrimaryExpr      go to state 42
    Operand          go to state 43
    Literal          go to state 44
    IndexExpr        go to state 45
    ConversionExpr   go to state 46
    DeclarationStmt  go to state 47
    AssignmentExpr   go to state 48
    AssignmentStmt   go to state 49
    IncDecStmt       go to state 50
    Block            go to state 51
    IfStmt           go to state 52
    WhileStmt        go to state 53
    ForStmt          go to state 54
    PrintStmt        go to state 55


State 64

    0 $accept: Program $end .

    $default  accept


State 65

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


State 66

   55 DeclarationStmt: Type IDENT . '[' ASSIGN Expression ']' SEMICOLON
   56                | Type IDENT . '[' Expression ']' SEMICOLON
   57                | Type IDENT . SEMICOLON

    SEMICOLON  shift, and go to state 97
    '['        shift, and go to state 98


State 67

   54 ConversionExpr: Type '(' . Expression ')'

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 99
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 68

   19 Expression: Expression ADD . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 100
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 69

   20 Expression: Expression SUB . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 101
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 70

   21 Expression: Expression MUL . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 102
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 71

   22 Expression: Expression QUO . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 103
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 72

   23 Expression: Expression REM . Expression SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 104
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 73

   66 IncDecExpr: INC .

    $default  reduce using rule 66 (IncDecExpr)


State 74

   67 IncDecExpr: DEC .

    $default  reduce using rule 67 (IncDecExpr)


State 75

   60 assign_op: ASSIGN .

    $default  reduce using rule 60 (assign_op)


State 76

   61 assign_op: ADD_ASSIGN .

    $default  reduce using rule 61 (assign_op)


State 77

   62 assign_op: SUB_ASSIGN .

    $default  reduce using rule 62 (assign_op)


State 78

   63 assign_op: MUL_ASSIGN .

    $default  reduce using rule 63 (assign_op)


State 79

   64 assign_op: QUO_ASSIGN .

    $default  reduce using rule 64 (assign_op)


State 80

   65 assign_op: REM_ASSIGN .

    $default  reduce using rule 65 (assign_op)


State 81

   58 AssignmentExpr: Expression assign_op . Expression

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 105
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 82

   68 IncDecStmt: Expression IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 106


State 83

   25 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 25 (UnaryExpr)


State 84

   53 IndexExpr: PrimaryExpr '[' . Expression ']'

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 107
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 85

   59 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 59 (AssignmentStmt)


State 86

   70 IfStmt: IF Condition Block .

    $default  reduce using rule 70 (IfStmt)


State 87

   73 WhileStmt: WHILE '(' Condition . ')' Block

    ')'  shift, and go to state 108


State 88

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   58 AssignmentExpr: Expression . assign_op Expression
   79 SimpleExpr: Expression .

    ADD         shift, and go to state 68
    SUB         shift, and go to state 69
    MUL         shift, and go to state 70
    QUO         shift, and go to state 71
    REM         shift, and go to state 72
    ASSIGN      shift, and go to state 75
    ADD_ASSIGN  shift, and go to state 76
    SUB_ASSIGN  shift, and go to state 77
    MUL_ASSIGN  shift, and go to state 78
    QUO_ASSIGN  shift, and go to state 79
    REM_ASSIGN  shift, and go to state 80

    $default  reduce using rule 79 (SimpleExpr)

    assign_op  go to state 81


State 89

   78 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 78 (SimpleExpr)


State 90

   80 SimpleExpr: IncDecExpr .

    $default  reduce using rule 80 (SimpleExpr)


State 91

   74 ForStmt: FOR '(' ForClause . ')' Block

    ')'  shift, and go to state 109


State 92

   75 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 110


State 93

   76 InitStmt: SimpleExpr .

    $default  reduce using rule 76 (InitStmt)


State 94

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   81 PrintStmt: PRINT '(' Expression . ')' SEMICOLON

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72
    ')'  shift, and go to state 111


State 95

   49 Operand: '(' Expression ')' .

    $default  reduce using rule 49 (Operand)


State 96

   69 Block: '{' StatementList '}' .

    $default  reduce using rule 69 (Block)


State 97

   57 DeclarationStmt: Type IDENT SEMICOLON .

    $default  reduce using rule 57 (DeclarationStmt)


State 98

   55 DeclarationStmt: Type IDENT '[' . ASSIGN Expression ']' SEMICOLON
   56                | Type IDENT '[' . Expression ']' SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    ASSIGN      shift, and go to state 112
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 113
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 99

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   54 ConversionExpr: Type '(' Expression . ')'

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72
    ')'  shift, and go to state 114


State 100

   19 Expression: Expression . ADD Expression SEMICOLON
   19           | Expression ADD Expression . SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON

    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    QUO        shift, and go to state 71
    REM        shift, and go to state 72
    SEMICOLON  shift, and go to state 115


State 101

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   20           | Expression SUB Expression . SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON

    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    QUO        shift, and go to state 71
    REM        shift, and go to state 72
    SEMICOLON  shift, and go to state 116


State 102

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   21           | Expression MUL Expression . SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON

    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    QUO        shift, and go to state 71
    REM        shift, and go to state 72
    SEMICOLON  shift, and go to state 117


State 103

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   22           | Expression QUO Expression . SEMICOLON
   23           | Expression . REM Expression SEMICOLON

    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    QUO        shift, and go to state 71
    REM        shift, and go to state 72
    SEMICOLON  shift, and go to state 118


State 104

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   23           | Expression REM Expression . SEMICOLON

    ADD        shift, and go to state 68
    SUB        shift, and go to state 69
    MUL        shift, and go to state 70
    QUO        shift, and go to state 71
    REM        shift, and go to state 72
    SEMICOLON  shift, and go to state 119


State 105

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   58 AssignmentExpr: Expression assign_op Expression .

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72

    $default  reduce using rule 58 (AssignmentExpr)


State 106

   68 IncDecStmt: Expression IncDecExpr SEMICOLON .

    $default  reduce using rule 68 (IncDecStmt)


State 107

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   53 IndexExpr: PrimaryExpr '[' Expression . ']'

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72
    ']'  shift, and go to state 120


State 108

   73 WhileStmt: WHILE '(' Condition ')' . Block

    '{'  shift, and go to state 29

    Block  go to state 121


State 109

   74 ForStmt: FOR '(' ForClause ')' . Block

    '{'  shift, and go to state 29

    Block  go to state 122


State 110

   75 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 57
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46
    Condition       go to state 123


State 111

   81 PrintStmt: PRINT '(' Expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 112

   55 DeclarationStmt: Type IDENT '[' ASSIGN . Expression ']' SEMICOLON

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 125
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46


State 113

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   56 DeclarationStmt: Type IDENT '[' Expression . ']' SEMICOLON

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72
    ']'  shift, and go to state 126


State 114

   54 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 54 (ConversionExpr)


State 115

   19 Expression: Expression ADD Expression SEMICOLON .

    $default  reduce using rule 19 (Expression)


State 116

   20 Expression: Expression SUB Expression SEMICOLON .

    $default  reduce using rule 20 (Expression)


State 117

   21 Expression: Expression MUL Expression SEMICOLON .

    $default  reduce using rule 21 (Expression)


State 118

   22 Expression: Expression QUO Expression SEMICOLON .

    $default  reduce using rule 22 (Expression)


State 119

   23 Expression: Expression REM Expression SEMICOLON .

    $default  reduce using rule 23 (Expression)


State 120

   53 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 53 (IndexExpr)


State 121

   73 WhileStmt: WHILE '(' Condition ')' Block .

    $default  reduce using rule 73 (WhileStmt)


State 122

   74 ForStmt: FOR '(' ForClause ')' Block .

    $default  reduce using rule 74 (ForStmt)


State 123

   75 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 127


State 124

   81 PrintStmt: PRINT '(' Expression ')' SEMICOLON .

    $default  reduce using rule 81 (PrintStmt)


State 125

   19 Expression: Expression . ADD Expression SEMICOLON
   20           | Expression . SUB Expression SEMICOLON
   21           | Expression . MUL Expression SEMICOLON
   22           | Expression . QUO Expression SEMICOLON
   23           | Expression . REM Expression SEMICOLON
   55 DeclarationStmt: Type IDENT '[' ASSIGN Expression . ']' SEMICOLON

    ADD  shift, and go to state 68
    SUB  shift, and go to state 69
    MUL  shift, and go to state 70
    QUO  shift, and go to state 71
    REM  shift, and go to state 72
    ']'  shift, and go to state 128


State 126

   56 DeclarationStmt: Type IDENT '[' Expression ']' . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 127

   75 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    QUO         shift, and go to state 4
    REM         shift, and go to state 5
    INT         shift, and go to state 6
    FLOAT       shift, and go to state 7
    BOOL        shift, and go to state 8
    STRING      shift, and go to state 9
    INC         shift, and go to state 73
    DEC         shift, and go to state 74
    GEQ         shift, and go to state 10
    LEQ         shift, and go to state 11
    EQL         shift, and go to state 12
    NEQ         shift, and go to state 13
    LST         shift, and go to state 14
    GTR         shift, and go to state 15
    LAND        shift, and go to state 16
    LOR         shift, and go to state 17
    NOT         shift, and go to state 18
    INT_LIT     shift, and go to state 24
    FLOAT_LIT   shift, and go to state 25
    STRING_LIT  shift, and go to state 26
    IDENT       shift, and go to state 27
    '('         shift, and go to state 28

    Type            go to state 56
    TypeName        go to state 34
    Expression      go to state 88
    UnaryExpr       go to state 36
    unary_op        go to state 37
    binary_op       go to state 38
    cmp_op          go to state 39
    add_op          go to state 40
    mul_op          go to state 41
    PrimaryExpr     go to state 42
    Operand         go to state 43
    Literal         go to state 44
    IndexExpr       go to state 45
    ConversionExpr  go to state 46
    AssignmentExpr  go to state 89
    IncDecExpr      go to state 90
    PostStmt        go to state 130
    SimpleExpr      go to state 131


State 128

   55 DeclarationStmt: Type IDENT '[' ASSIGN Expression ']' . SEMICOLON

    SEMICOLON  shift, and go to state 132


State 129

   56 DeclarationStmt: Type IDENT '[' Expression ']' SEMICOLON .

    $default  reduce using rule 56 (DeclarationStmt)


State 130

   75 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 75 (ForClause)


State 131

   77 PostStmt: SimpleExpr .

    $default  reduce using rule 77 (PostStmt)


State 132

   55 DeclarationStmt: Type IDENT '[' ASSIGN Expression ']' SEMICOLON .

    $default  reduce using rule 55 (DeclarationStmt)
